<?xml version="1.0" encoding="UTF-8"?>

<mule version="EE-3.7.2"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" 
	xmlns:servicenow="http://www.mulesoft.org/schema/mule/servicenow" 
	xmlns:wd-hr="http://www.mulesoft.org/schema/mule/wd-hr" 
	xmlns:wd-staffing="http://www.mulesoft.org/schema/mule/wd-staffing" 
	xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" 
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/wd-staffing http://www.mulesoft.org/schema/mule/wd-staffing/current/mule-wd-staffing.xsd
http://www.mulesoft.org/schema/mule/wd-hr http://www.mulesoft.org/schema/mule/wd-hr/current/mule-wd-hr.xsd
http://www.mulesoft.org/schema/mule/servicenow http://www.mulesoft.org/schema/mule/servicenow/current/mule-servicenow.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <wd-staffing:config name="Workday_Staffing" staffingUser="${wday.user}" staffingPassword="${wday.password}" staffingEndpoint="${wday.endpoint}" doc:name="Workday Staffing">
        <wd-staffing:connection-pooling-profile initialisationPolicy="INITIALISE_ONE" exhaustedAction="WHEN_EXHAUSTED_GROW"/>
    </wd-staffing:config>
    
    
    <sub-flow name="hireEmployee" >
        <logger message="starting hireEmployeeFlow" level="INFO" doc:name="Logger"/>
       <dw:transform-message doc:name="Transform Employee to Hire Employee Request Type">
            <dw:set-payload resource="classpath:TransformEmployeetoHireEmployeeRequestType.dwl"></dw:set-payload>
        </dw:transform-message>
        <wd-staffing:hire-employee config-ref="Workday_Staffing" doc:name="Workday Staffing"/>
        <logger message="HireEmployee flow finished." level="INFO" doc:name="Logger"/>
                    
    </sub-flow>
    <sub-flow name="deleteRequests" >
        <logger message="Deleting request: #[payload]" level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Create request">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://www.service-now.com/sc_request
---
{
	ns0#deleteRecord: {
		ns0#sys_id: payload
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <servicenow:invoke config-ref="ServiceNow" type="sc_request||deleteRecord" doc:name="ServiceNow"/>
        <dw:transform-message doc:name="XML to Java">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <logger message="deleteSnowRequests response: #[payload]" level="INFO" doc:name="Logger"/>

    </sub-flow>
    <sub-flow name="deleteReqItems" >
        <logger message="Deleting requestItem: #[payload]" level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Create request">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://www.service-now.com/sc_req_item
---
{
	ns0#deleteRecord: {
		ns0#sys_id: payload
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <servicenow:invoke config-ref="ServiceNow" type="sc_req_item||deleteRecord" doc:name="ServiceNow"/>
        <dw:transform-message doc:name="XML to Java">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <logger message="deleteSnowReqItems response: #[payload]" level="INFO" doc:name="Logger"/>

    </sub-flow>
    <sub-flow name="getSnowReqItems" >
        <dw:transform-message doc:name="Create request">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://www.service-now.com/sc_req_item
---
{
	ns0#getRecords: {
		ns0#sys_id: payload
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <servicenow:invoke config-ref="ServiceNow" type="sc_req_item||getRecords" doc:name="ServiceNow"/>
        <dw:transform-message doc:name="XML to Java">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.getRecordsResponse.*getRecordsResult]]></dw:set-payload>
        </dw:transform-message>
        <logger message="getSnowReqItems response: #[payload]" level="INFO" doc:name="Logger"/>

    </sub-flow>
    <sub-flow name="getSnowRequests" >
        <dw:transform-message doc:name="Create request">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://www.service-now.com/sc_request
---
{
	ns0#getRecords: {
		ns0#assigned_to: payload
	}
}


]]></dw:set-payload>
        </dw:transform-message>
        <servicenow:invoke config-ref="ServiceNow" type="sc_request||getRecords" doc:name="ServiceNow"/>
        <dw:transform-message doc:name="XML to Java">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.getRecordsResponse.*getRecordsResult]]></dw:set-payload>
        </dw:transform-message>
        <logger message="getSnowRequests response: #[payload]" level="INFO" doc:name="Logger"/>

    </sub-flow>

    
    <sub-flow name="getWorkdaytoTerminateFlow" >
        <logger message="starting getWorkdaytoTerminateFlow" level="INFO" doc:name="Logger"/>
        <wd-hr:get-employee config-ref="Workday_Human_Resource" doc:name="Workday Human Resource"/>
        <dw:transform-message doc:name="EmployeeType to TerminateEmployeeRequestType">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%var response = payload as :object { class: "com.workday.hr.EmployeeType" }
---
{
	version					: response.version,
	terminateEmployeeData 	: {
		employeeReference	: {
			descriptor		: response.employeeReference.integrationIDReference.descriptor,
			ID				: response.employeeData map {
				type		: "Employee_ID",
				value		: $.employeeID
			}
		}
	}
} as :object {class: "com.workday.staffing.TerminateEmployeeRequestType"}
unless (response.employeeData is :null) otherwise []
]]></dw:set-payload>
        </dw:transform-message>

	</sub-flow>
    
    <sub-flow name="terminateWorkdayEmployee" >
    	<wd-staffing:terminate-employee config-ref="Workday_Staffing" doc:name="Workday Staffing" />
    </sub-flow>

    
</mule>
