<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:servicenow="http://www.mulesoft.org/schema/mule/servicenow" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:spring="http://www.springframework.org/schema/beans"
      version="EE-3.5.2"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/servicenow http://www.mulesoft.org/schema/mule/servicenow/current/mule-servicenow.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
    
    <batch:job name="createServiceNowAssets">
        <batch:threading-profile poolExhaustedAction="WAIT"/>
        <batch:process-records>
            <batch:step name="CheckIfNewHire" >
                <enricher source="payload" target="recordVars['isNewHire']" doc:name="store in recordVars['isNewHire']">
                    <component class="org.mule.templates.TransactionsProcessor" doc:name="Iterate through transaction logs"/>
                </enricher>
                <enricher source="payload" target="recordVars['isSales']" doc:name="store in recordVars['isSales']">
                    <component class="org.mule.templates.DepartmentProcessor" doc:name="Check for sales organization"/>
                </enricher>
            </batch:step>
            <batch:step name="InsertRequestA" accept-expression="recordVars['isNewHire'] == true">
                <expression-component doc:name="Expression"><![CDATA[java.util.Map output = new java.util.HashMap();
output['approval'] = "Requested";
output['active'] = true;
output['assignedTo'] = '${snow.pc.assignedTo}';
output['location'] = recordVars['isSales'] ? '${snow.locationA}' : '${snow.locationB}';
output['price'] = new BigDecimal('${snow.pc.price}');
java.text.DateFormat df = new java.text.SimpleDateFormat("yyyy-MM-dd");		
output['dueDate'] = df.format(new java.util.Date(System.currentTimeMillis() + new java.lang.Integer(${snow.pc.deliveryDays}) * 86400000));
payload = output;]]></expression-component>
                <enricher source="payload" target="recordVars['request1']" doc:name="store in recordVars['request1']">
                    <flow-ref name="insertRequestFlow" doc:name="call insertRequestFlow"/>
                </enricher>
            </batch:step>
            <batch:step name="InsertPcRequestItem" accept-expression="recordVars['isNewHire'] == true">
                <expression-component doc:name="Expression"><![CDATA[java.util.Map output = new java.util.HashMap();
output['active'] = true;
output['approval'] = "requested";
output['catItem'] = '${snow.pc.model}';
//output['approvalSet'] = '${snow.pc.assignedTo}';
output['request'] = recordVars['request1']['sysId'];
output['parent'] = recordVars['request1']['sysId'];
java.text.DateFormat df = new java.text.SimpleDateFormat("yyyy-MM-dd");		
output['estimatedDelivery'] = df.format(new java.util.Date(System.currentTimeMillis() + new java.lang.Integer(${snow.pc.deliveryDays}) * 86400000));
output['price'] = ${snow.pc.price};
payload = output;]]></expression-component>

                <flow-ref name="insertItemFlow" doc:name="call insertItemFlow"/>
            </batch:step>
            <batch:step name="InsertRequestB" accept-expression="recordVars['isNewHire'] == true">
                <expression-component doc:name="Expression"><![CDATA[java.util.Map output = new java.util.HashMap();
output['approval'] = "Requested";
output['active'] = true;
output['assignedTo'] = '${snow.desk.assignedTo}';
output['location'] = recordVars['isSales'] ? '${snow.locationA}' : '${snow.locationB}';
output['price'] = new BigDecimal('${snow.desk.price}');
java.text.DateFormat df = new java.text.SimpleDateFormat("yyyy-MM-dd");		
output['dueDate'] = df.format(new java.util.Date(System.currentTimeMillis() + new java.lang.Integer(${snow.desk.deliveryDays}) * 86400000));
payload = output;]]></expression-component>
                <enricher source="payload" target="recordVars['request2']" doc:name="store in recordVars['request1']">
                    <flow-ref name="insertRequestFlow" doc:name="call insertRequestFlow"/>
                </enricher>
            </batch:step>
            <batch:step name="InsertDeskRequestItem" accept-expression="recordVars['isNewHire'] == true">

                <expression-component doc:name="Expression"><![CDATA[java.util.Map output = new java.util.HashMap();
output['active'] = true;
output['approval'] = "requested";
output['catItem'] = '${snow.desk.model}';
output['approvalSet'] = '${snow.desk.assignedTo}';
output['request'] = recordVars['request2']['sysId'];
output['parent'] = recordVars['request2']['sysId'];
java.text.DateFormat df = new java.text.SimpleDateFormat("yyyy-MM-dd");		
output['estimatedDelivery'] = df.format(new java.util.Date(System.currentTimeMillis() + new java.lang.Integer(${snow.desk.deliveryDays}) * 86400000));
output['price'] = ${snow.desk.price};
payload = output;]]></expression-component>
                <flow-ref name="insertItemFlow" doc:name="call insertItemFlow"/>
            </batch:step>
        </batch:process-records>
        <batch:on-complete>
            <json:object-to-json-transformer doc:name="Convert Batch results to JSON"/>
            <logger level="INFO" doc:name="Log the batch result" message="Batch completed: #[payload]"/>
        </batch:on-complete>
    </batch:job>
    <sub-flow name="insertRequestFlow" doc:name="insertRequestFlow">
        <servicenow:insert config-ref="ServiceNow" type="SC_REQUEST" doc:name="ServiceNow">
            <servicenow:insert-request ref="#[payload]"/>
        </servicenow:insert>
        <logger message="request: #[payload]" level="INFO" doc:name="Log the insert response"/>
    </sub-flow>
    <sub-flow name="insertItemFlow" doc:name="insertItemFlow">
        <servicenow:insert config-ref="ServiceNow" type="SC_REQ_ITEM" doc:name="ServiceNow"/>
        <json:object-to-json-transformer doc:name="Convert InsertResponse to JSON"/>
        <logger message="request item: #[payload]" level="INFO" doc:name="Log the insert respone"/>
    </sub-flow>

</mule>
